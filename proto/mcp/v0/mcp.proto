syntax = "proto3";
package mcp.v0;

import "buf/validate/validate.proto";

option go_package = "mcp-server/mcp/v0";

service McpService {
  rpc ListTools (ListToolsRequest) returns (ListToolsResponse);
}

message ListToolsRequest {
  string cursor = 1 [(buf.validate.field).string = {max_len: 1024}];
  int32  page_size = 2;
}

message ListToolsResponse {
  repeated Tool tools = 1;
  string next_cursor = 2;
  // NOTE: no server_id/protocol_version here (embedded in descriptors via FileOptions).
}

message Tool {
  string name = 1 [(buf.validate.field).string = {min_len: 1}];
  string title = 2 [(buf.validate.field).string = {min_len: 1}];
  string description = 3;
  string input_type  = 4 [(buf.validate.field).string = {min_len: 1}];  // fully-qualified proto message name
  string output_type = 5 [(buf.validate.field).string = {min_len: 1}];  // fully-qualified proto message name
  string grpc_service = 6; // optional fully-qualified service name
  string grpc_method  = 7; // optional method on the service
  map<string,string> annotations = 9; // e.g., {"idempotent":"true"}
}
